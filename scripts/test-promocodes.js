#!/usr/bin/env node

// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
const PromocodesService = require('../services/promocodes/promocodes-service');

async function testPromocodes() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤\n');

  const promocodesService = new PromocodesService();

  try {
    // –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
    console.log('üìã –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤');
    const allPromocodes = await promocodesService.getAllActivePromocodes();
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${allPromocodes.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤\n`);

    // –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    const categories = ['electronics', 'fashion', 'food', 'shoes'];

    for (const category of categories) {
      console.log(`üì± –¢–µ—Å—Ç 2: –ü—Ä–æ–º–æ–∫–æ–¥—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${category}"`);
      const categoryPromocodes = await promocodesService.getPromocodes(category);
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${categoryPromocodes.length} –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤`);

      if (categoryPromocodes.length > 0) {
        console.log('üìÑ –ü—Ä–∏–º–µ—Ä—ã:');
        categoryPromocodes.slice(0, 2).forEach(code => {
          console.log(`   - ${code.code}: ${code.title} (${code.discountValue}${code.discountType === 'percentage' ? '%' : '‚Çπ'})`);
        });
      }
      console.log('');
    }

    // –¢–µ—Å—Ç 3: –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
    console.log('üîç –¢–µ—Å—Ç 3: –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤');

    const testCases = [
      { code: 'FLIP500', store: 'flipkart.com', amount: 2500 },
      { code: 'MYNTRA20', store: 'myntra.com', amount: 1200 },
      { code: 'FOOD30', store: 'zomato.com', amount: 400 },
      { code: 'INVALID', store: 'test.com', amount: 1000 }
    ];

    for (const testCase of testCases) {
      const validation = await promocodesService.validatePromocode(
        testCase.code,
        testCase.store,
        testCase.amount
      );

      console.log(`   ${testCase.code} (${testCase.store}): ${validation.valid ? '‚úÖ –í–∞–ª–∏–¥–µ–Ω' : '‚ùå ' + validation.reason}`);

      if (validation.valid) {
        console.log(`   üí∞ –°–∫–∏–¥–∫–∞: ‚Çπ${validation.discount.discount} | –ò—Ç–æ–≥–æ: ‚Çπ${testCase.amount - validation.discount.discount}`);
      }
    }
    console.log('');

    // –¢–µ—Å—Ç 4: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞
    console.log('‚ûï –¢–µ—Å—Ç 4: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞');
    const newPromocode = {
      code: 'TEST25',
      title: '–¢–µ—Å—Ç–æ–≤–∞—è —Å–∫–∏–¥–∫–∞ 25%',
      description: '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–º–æ–∫–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏',
      discountType: 'percentage',
      discountValue: 25,
      minimumOrder: 500,
      category: 'general',
      store: 'test-store.com',
      expiryDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString()
    };

    const saveResult = await promocodesService.savePromocode(newPromocode);
    console.log(`‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ ${newPromocode.code} ${saveResult ? '—Å–æ—Ö—Ä–∞–Ω–µ–Ω' : '–Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω'}\n`);

    // –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    console.log('üîÑ –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è');
    const validation = await promocodesService.validatePromocode('TEST25', 'test-store.com', 1000);
    console.log(`   TEST25 –≤–∞–ª–∏–¥–∞—Ü–∏—è: ${validation.valid ? '‚úÖ –£—Å–ø–µ—à–Ω–æ' : '‚ùå –û—à–∏–±–∫–∞'}`);

    if (validation.valid) {
      console.log(`   üí∞ –°–∫–∏–¥–∫–∞ 25% –æ—Ç ‚Çπ1000 = ‚Çπ${validation.discount.discount}`);
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
function showPromocodeExamples() {
  console.log('\nüìù –ü–†–ò–ú–ï–†–´ –ü–†–û–ú–û–ö–û–î–û–í –î–õ–Ø –†–ê–ó–ù–´–• –ú–ê–ì–ê–ó–ò–ù–û–í:');
  console.log('=' .repeat(50));

  const examples = [
    {
      store: 'Amazon India',
      codes: [
        'AMZ150 - ‚Çπ150 —Å–∫–∏–¥–∫–∞ –Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫—É',
        'AMZ500 - ‚Çπ500 —Å–∫–∏–¥–∫–∞ –æ—Ç ‚Çπ2000',
        'AMZ20 - 20% —Å–∫–∏–¥–∫–∞ –Ω–∞ –æ–¥–µ–∂–¥—É'
      ]
    },
    {
      store: 'Flipkart',
      codes: [
        'FLIP200 - ‚Çπ200 –Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫—É',
        'FLIP500 - ‚Çπ500 –æ—Ç ‚Çπ1500',
        'FLIP30 - 30% –Ω–∞ fashion'
      ]
    },
    {
      store: 'Myntra',
      codes: [
        'MYNTRA20 - 20% –Ω–∞ –æ–¥–µ–∂–¥—É',
        'MYNTRA300 - ‚Çπ300 –æ—Ç ‚Çπ1000',
        'MYNTRA50 - ‚Çπ50 –Ω–∞ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã'
      ]
    },
    {
      store: 'Zomato',
      codes: [
        'ZOMATO30 - 30% –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É',
        'ZOMATO150 - ‚Çπ150 –æ—Ç ‚Çπ500',
        'ZOMATO50 - ‚Çπ50 –Ω–∞ –Ω–∞–ø–∏—Ç–∫–∏'
      ]
    }
  ];

  examples.forEach(example => {
    console.log(`üè™ ${example.store}:`);
    example.codes.forEach(code => console.log(`   ${code}`));
    console.log('');
  });
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
if (require.main === module) {
  testPromocodes()
    .then(() => {
      showPromocodeExamples();
      console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
      process.exit(0);
    })
    .catch(error => {
      console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
      process.exit(1);
    });
}

module.exports = { testPromocodes, showPromocodeExamples };

