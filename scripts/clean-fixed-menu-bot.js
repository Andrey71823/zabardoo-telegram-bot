const TelegramBot = require('node-telegram-bot-api');

// Mock implementation of BotDataIntegration for JavaScript
class MockBotDataIntegration {
  async searchProductsForBot(query, category, limit = 10) {
    // Simulate real data from Indian stores
    const mockProducts = [
      {
        id: 'flipkart_1',
        name: 'Samsung Galaxy S24 5G (Marble Gray, 256GB)',
        price: '‚Çπ65,999',
        originalPrice: '‚Çπ89,999',
        discount: '27% OFF (Save ‚Çπ24,000)',
        store: 'Flipkart',
        url: 'https://www.flipkart.com/samsung-galaxy-s24-5g?affid=your_affiliate_id',
        rating: '4.3/5 (12,847 reviews)',
        cashback: '3.5% Cashback',
        features: ['108MP Camera', '120Hz Display', '5G Ready', 'Wireless Charging']
      },
      {
        id: 'amazon_1',
        name: 'Apple iPhone 15 (Blue, 128GB)',
        price: '‚Çπ79,900',
        originalPrice: '‚Çπ79,900',
        discount: 'Latest Price',
        store: 'Amazon India',
        url: 'https://www.amazon.in/dp/B0CHX1W1XY?tag=your_affiliate_id',
        rating: '4.4/5 (15,623 reviews)',
        cashback: '2.5% Cashback',
        features: ['48MP Main Camera', 'Dynamic Island', 'USB-C', 'A16 Bionic']
      },
      {
        id: 'myntra_1',
        name: 'Nike Air Max 270 Running Shoes',
        price: '‚Çπ7,495',
        originalPrice: '‚Çπ12,995',
        discount: '42% OFF (Save ‚Çπ5,500)',
        store: 'Myntra',
        url: 'https://www.myntra.com/sports-shoes/nike/nike-men-air-max-270-running-shoes/1364628?utm_source=affiliate',
        rating: '4.2/5 (2,847 reviews)',
        cashback: '6.5% Cashback',
        features: ['Air Max Technology', 'Breathable Mesh', 'Durable Rubber Sole']
      }
    ];

    return mockProducts.filter(product => 
      product.name.toLowerCase().includes(query.toLowerCase()) ||
      product.store.toLowerCase().includes(query.toLowerCase())
    ).slice(0, limit);
  }

  formatProductMessage(product) {
    let message = `üõçÔ∏è *${product.name}*\n\n`;
    message += `üí∞ *Price:* ${product.price}\n`;
    message += `~~${product.originalPrice}~~ ${product.discount}\n\n`;
    message += `üè™ *Store:* ${product.store}\n`;
    message += `‚≠ê *Rating:* ${product.rating}\n`;
    message += `üí∏ *Cashback:* ${product.cashback}\n\n`;
    
    if (product.features.length > 0) {
      message += `‚ú® *Features:*\n`;
      product.features.forEach(feature => {
        message += `‚Ä¢ ${feature}\n`;
      });
      message += '\n';
    }
    
    message += `üîó [Buy Now](${product.url})`;
    
    return message;
  }
}

// Bot configuration
const token = process.env.TELEGRAM_BOT_TOKEN || 'YOUR_BOT_TOKEN_HERE';
const bot = new TelegramBot(token, { polling: true });
const dataIntegration = new MockBotDataIntegration();

// ONLY ONE FIXED MENU - NO DUPLICATES
const fixedMainMenu = {
  keyboard: [
    ['ü§ñ AI Recommendations', 'üî• Hot Deals', 'üìñ Guide'],
    ['üì± Electronics', 'üëó Fashion', 'üíÑ Beauty'],
    ['üçî Food', 'üè™ Stores', '‚öôÔ∏è Settings'],
    ['üîç Find Deals', 'üéÆ My Profile'],
    ['üí∞ Cashback', 'üÜò Help']
  ],
  resize_keyboard: true,
  one_time_keyboard: false
};

// Bot commands
bot.onText(/\/start/, async (msg) => {
  const chatId = msg.chat.id;
  const firstName = msg.from.first_name || 'Friend';
  
  // CLEAN WELCOME MESSAGE - NO INLINE BUTTONS
  const welcomeMessage = `üéâ Welcome to bazaarGuru, ${firstName}! üõçÔ∏è

üáÆüá≥ Your ultimate shopping companion for the best deals from top Indian stores!

‚ú® *What I can do for you:*
‚Ä¢ üîç Find real products with live prices
‚Ä¢ üí∞ Show actual discounts and cashback
‚Ä¢ üéüÔ∏è Provide working coupon codes
‚Ä¢ ü§ñ Give AI-powered recommendations
‚Ä¢ üìä Compare prices across stores

üè™ *Supported Stores:*
‚Ä¢ Flipkart ‚Ä¢ Amazon India ‚Ä¢ Myntra
‚Ä¢ Nykaa ‚Ä¢ AJIO ‚Ä¢ And many more!

üí° *Use the menu buttons below to get started!*

Ready to save money? Let's start shopping! üöÄ`;

  // ONLY REPLY KEYBOARD - NO INLINE BUTTONS
  await bot.sendMessage(chatId, welcomeMessage, {
    parse_mode: 'Markdown',
    reply_markup: fixedMainMenu
  });
});

// Handle all menu buttons
bot.on('message', async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;

  if (!text || text.startsWith('/')) return;

  try {
    switch (text) {
      case 'ü§ñ AI Recommendations':
        await handleAIRecommendations(chatId);
        break;
      
      case 'üî• Hot Deals':
        await handleHotDeals(chatId);
        break;
      
      case 'üìñ Guide':
        await handleGuide(chatId);
        break;
      
      case 'üì± Electronics':
        await handleCategorySearch(chatId, 'Electronics');
        break;
      
      case 'üëó Fashion':
        await handleCategorySearch(chatId, 'Fashion');
        break;
      
      case 'üíÑ Beauty':
        await handleCategorySearch(chatId, 'Beauty');
        break;
      
      case 'üçî Food':
        await handleCategorySearch(chatId, 'Food');
        break;
      
      case 'üè™ Stores':
        await handleStores(chatId);
        break;
      
      case '‚öôÔ∏è Settings':
        await handleSettings(chatId);
        break;
      
      case 'üîç Find Deals':
        await handleFindDeals(chatId);
        break;
      
      case 'üéÆ My Profile':
        await handleMyProfile(chatId);
        break;
      
      case 'üí∞ Cashback':
        await handleCashback(chatId);
        break;
      
      case 'üÜò Help':
        await handleHelp(chatId);
        break;
      
      default:
        // Handle product search
        if (text.length > 2) {
          await handleProductSearch(chatId, text);
        }
        break;
    }
  } catch (error) {
    console.error('Error handling message:', error);
    await bot.sendMessage(chatId, '‚ùå Sorry, something went wrong. Please try again.', {
      reply_markup: fixedMainMenu
    });
  }
});

// Handler functions - ALL RETURN ONLY FIXED MENU
async function handleAIRecommendations(chatId) {
  const message = `ü§ñ *AI Recommendations*

Based on current trends and user preferences:

üî• *Trending Now:*
‚Ä¢ Smartphones with best camera quality
‚Ä¢ Wireless earbuds under ‚Çπ5,000
‚Ä¢ Winter fashion collection
‚Ä¢ Skincare products for dry skin

üí° *Personalized for you:*
‚Ä¢ Electronics with high ratings
‚Ä¢ Fashion items in your size range
‚Ä¢ Beauty products for your skin type

üéØ *Smart Suggestions:*
‚Ä¢ Best value for money products
‚Ä¢ Highly rated items with good reviews
‚Ä¢ Products with maximum cashback

What category interests you most?`;

  await bot.sendMessage(chatId, message, {
    parse_mode: 'Markdown',
    reply_markup: fixedMainMenu
  });
}

async function handleHotDeals(chatId) {
  await bot.sendMessage(chatId, 'üî• Finding the hottest deals for you...', {
    reply_markup: fixedMainMenu
  });
  
  try {
    const deals = await dataIntegration.searchProductsForBot('deals', undefined, 3);
    
    if (deals.length === 0) {
      await bot.sendMessage(chatId, '‚ùå No deals found at the moment. Please try again later.', {
        reply_markup: fixedMainMenu
      });
      return;
    }

    await bot.sendMessage(chatId, `üî• *Hot Deals Today* (${deals.length} found)`, {
      parse_mode: 'Markdown',
      reply_markup: fixedMainMenu
    });

    for (const deal of deals) {
      const message = dataIntegration.formatProductMessage(deal);
      
      await bot.sendMessage(chatId, message, {
        parse_mode: 'Markdown',
        disable_web_page_preview: false,
        reply_markup: fixedMainMenu
      });
      
      await new Promise(resolve => setTimeout(resolve, 500));
    }
  } catch (error) {
    console.error('Error getting hot deals:', error);
    await bot.sendMessage(chatId, '‚ùå Error loading deals. Please try again.', {
      reply_markup: fixedMainMenu
    });
  }
}

async function handleGuide(chatId) {
  const guideMessage = `üìñ *bazaarGuru Shopping Guide*

üõçÔ∏è *How to Shop Smart:*

1Ô∏è‚É£ *Search Products:*
   ‚Ä¢ Use "üîç Find Deals" button
   ‚Ä¢ Tap category buttons (üì±üëóüíÑ)
   ‚Ä¢ Type product names directly

2Ô∏è‚É£ *Compare Prices:*
   ‚Ä¢ See original vs discounted price
   ‚Ä¢ Check cashback rates
   ‚Ä¢ Compare across stores

3Ô∏è‚É£ *Use Menu Features:*
   ‚Ä¢ üî• Hot Deals - trending offers
   ‚Ä¢ ü§ñ AI Recommendations - personalized
   ‚Ä¢ üè™ Stores - browse by shop
   ‚Ä¢ üí∞ Cashback - earn money back

4Ô∏è‚É£ *Track Your Activity:*
   ‚Ä¢ üéÆ My Profile - view stats
   ‚Ä¢ ‚öôÔ∏è Settings - customize experience
   ‚Ä¢ üÜò Help - get support

üí° *Pro Tips:*
‚Ä¢ All features accessible from main menu
‚Ä¢ No need to navigate back and forth
‚Ä¢ Menu stays fixed for easy access

Ready to start shopping? üöÄ`;

  await bot.sendMessage(chatId, guideMessage, {
    parse_mode: 'Markdown',
    reply_markup: fixedMainMenu
  });
}

async function handleCategorySearch(chatId, category) {
  await bot.sendMessage(chatId, `üîç Searching ${category} products...`, {
    reply_markup: fixedMainMenu
  });
  
  try {
    const products = await dataIntegration.searchProductsForBot(category, category, 2);
    
    if (products.length === 0) {
      await bot.sendMessage(chatId, `‚ùå No ${category} products found. Try a different search.`, {
        reply_markup: fixedMainMenu
      });
      return;
    }

    await bot.sendMessage(chatId, `üì± *${category} Products* (${products.length} found)`, {
      parse_mode: 'Markdown',
      reply_markup: fixedMainMenu
    });

    for (const product of products) {
      const message = dataIntegration.formatProductMessage(product);
      
      await bot.sendMessage(chatId, message, {
        parse_mode: 'Markdown',
        disable_web_page_preview: false,
        reply_markup: fixedMainMenu
      });
      
      await new Promise(resolve => setTimeout(resolve, 500));
    }
  } catch (error) {
    console.error('Error searching category:', error);
    await bot.sendMessage(chatId, '‚ùå Error searching products. Please try again.', {
      reply_markup: fixedMainMenu
    });
  }
}

async function handleStores(chatId) {
  const storesMessage = `üè™ *Available Stores*

üáÆüá≥ *Top Indian E-commerce:*

üõí **Flipkart**
‚Ä¢ Categories: Electronics, Fashion, Home
‚Ä¢ Cashback: 2-8%
‚Ä¢ Delivery: 2-7 days

üõí **Amazon India**
‚Ä¢ Categories: All categories
‚Ä¢ Cashback: 1-6%
‚Ä¢ Delivery: 1-5 days

üõí **Myntra**
‚Ä¢ Categories: Fashion, Beauty
‚Ä¢ Cashback: 3-10%
‚Ä¢ Delivery: 3-7 days

üõí **Nykaa**
‚Ä¢ Categories: Beauty, Personal Care
‚Ä¢ Cashback: 5-12%
‚Ä¢ Delivery: 2-5 days

üõí **AJIO**
‚Ä¢ Categories: Fashion, Accessories
‚Ä¢ Cashback: 4-9%
‚Ä¢ Delivery: 3-7 days

üí° *All stores offer:*
‚Ä¢ Secure payments
‚Ä¢ Easy returns
‚Ä¢ Customer support
‚Ä¢ Affiliate cashback

Which store would you like to explore?`;

  await bot.sendMessage(chatId, storesMessage, {
    parse_mode: 'Markdown',
    reply_markup: fixedMainMenu
  });
}

async function handleSettings(chatId) {
  const settingsMessage = `‚öôÔ∏è *Settings*

üåê *Language:* English
üîî *Notifications:* Enabled
üí∞ *Price Alerts:* Enabled
üìç *Location:* India

üõçÔ∏è *Shopping Preferences:*
‚Ä¢ Show cashback rates: ‚úÖ
‚Ä¢ Include out-of-stock items: ‚ùå
‚Ä¢ Sort by: Best Discount
‚Ä¢ Max results per search: 10

üéØ *Menu Settings:*
‚Ä¢ Fixed menu: ‚úÖ Always visible
‚Ä¢ Quick access: ‚úÖ All features available
‚Ä¢ Auto-refresh: ‚úÖ Real-time updates

üîê *Privacy:*
‚Ä¢ Save search history: ‚úÖ
‚Ä¢ Personalized recommendations: ‚úÖ
‚Ä¢ Share usage data: ‚ùå

üí° *Menu stays fixed for easy navigation!*
All features accessible without going back.`;

  await bot.sendMessage(chatId, settingsMessage, {
    parse_mode: 'Markdown',
    reply_markup: fixedMainMenu
  });
}

async function handleFindDeals(chatId) {
  const findDealsMessage = `üîç *Find Deals*

üí° *How to search:*

1Ô∏è‚É£ **Type product name**
   Example: "iPhone", "Nike shoes", "laptop"

2Ô∏è‚É£ **Use category buttons**
   üì± Electronics, üëó Fashion, üíÑ Beauty, etc.

3Ô∏è‚É£ **Browse by store**
   Use üè™ Stores to see specific shop deals

üî• **Popular searches:**
‚Ä¢ Smartphones under ‚Çπ20,000
‚Ä¢ Wireless earbuds
‚Ä¢ Running shoes
‚Ä¢ Skincare products
‚Ä¢ Gaming laptops

üí∞ **What you'll get:**
‚Ä¢ Real-time prices
‚Ä¢ Discount percentages
‚Ä¢ Cashback rates
‚Ä¢ Store comparisons
‚Ä¢ Direct purchase links

Just type what you're looking for! üõçÔ∏è`;

  await bot.sendMessage(chatId, findDealsMessage, {
    parse_mode: 'Markdown',
    reply_markup: fixedMainMenu
  });
}

async function handleMyProfile(chatId) {
  const profileMessage = `üéÆ *My Profile*

üë§ **User Stats:**
‚Ä¢ Total Searches: 47
‚Ä¢ Money Saved: ‚Çπ12,450
‚Ä¢ Cashback Earned: ‚Çπ890
‚Ä¢ Favorite Categories: Electronics, Fashion

üìä **Activity Summary:**
‚Ä¢ This Month: 15 searches
‚Ä¢ Best Deal Found: 45% OFF Nike shoes
‚Ä¢ Top Store: Flipkart (12 purchases)
‚Ä¢ Average Savings: 28% per purchase

üéØ **Preferences:**
‚Ä¢ Price Range: ‚Çπ1,000 - ‚Çπ50,000
‚Ä¢ Preferred Brands: Samsung, Nike, Apple
‚Ä¢ Notification: Deal alerts ON
‚Ä¢ Language: English

üèÜ **Achievements:**
‚Ä¢ ü•â Smart Shopper (10+ purchases)
‚Ä¢ üí∞ Deal Hunter (‚Çπ10k+ saved)
‚Ä¢ üéÅ Cashback Master (‚Çπ500+ earned)
‚Ä¢ üîç Search Expert (50+ searches)

üéÅ **Rewards Available:**
‚Ä¢ ‚Çπ100 bonus cashback (unlock at ‚Çπ1000 earned)
‚Ä¢ Premium features trial
‚Ä¢ Exclusive deal notifications

Keep shopping to unlock more rewards! üåü`;

  await bot.sendMessage(chatId, profileMessage, {
    parse_mode: 'Markdown',
    reply_markup: fixedMainMenu
  });
}

async function handleCashback(chatId) {
  const cashbackMessage = `üí∞ *Cashback Center*

üí≥ **Current Rates:**
‚Ä¢ Flipkart: 2-8% cashback
‚Ä¢ Amazon India: 1-6% cashback
‚Ä¢ Myntra: 3-10% cashback
‚Ä¢ Nykaa: 5-12% cashback
‚Ä¢ AJIO: 4-9% cashback

üìä **Your Cashback:**
‚Ä¢ This Month: ‚Çπ245
‚Ä¢ Total Earned: ‚Çπ890
‚Ä¢ Pending: ‚Çπ67
‚Ä¢ Available for Withdrawal: ‚Çπ823

üí° **Maximize Cashback:**
‚Ä¢ Use recommended payment methods
‚Ä¢ Shop during special events
‚Ä¢ Combine with coupon codes
‚Ä¢ Check bank offers

üéØ **Bonus Opportunities:**
‚Ä¢ Extra 2-5% with credit cards
‚Ä¢ 1-2% additional with UPI
‚Ä¢ Special rates during sales
‚Ä¢ Referral bonuses available

üí∏ **Withdrawal Options:**
‚Ä¢ Bank transfer (‚Çπ100 minimum)
‚Ä¢ UPI instant transfer
‚Ä¢ Paytm wallet
‚Ä¢ Amazon Pay balance

Ready to earn more cashback? üíé`;

  await bot.sendMessage(chatId, cashbackMessage, {
    parse_mode: 'Markdown',
    reply_markup: fixedMainMenu
  });
}

async function handleHelp(chatId) {
  const helpMessage = `üÜò *Help & Support*

üîß **Quick Help:**

‚ùì **How to use the bot:**
‚Ä¢ All features available in main menu
‚Ä¢ Menu stays fixed - no need to navigate back
‚Ä¢ Type product names or use category buttons

üõçÔ∏è **Shopping Help:**
‚Ä¢ üîç Find Deals - search any product
‚Ä¢ üî• Hot Deals - trending offers
‚Ä¢ ü§ñ AI Recommendations - personalized suggestions
‚Ä¢ üè™ Stores - browse by shop

üë§ **Account Help:**
‚Ä¢ üéÆ My Profile - view your stats
‚Ä¢ üí∞ Cashback - manage earnings
‚Ä¢ ‚öôÔ∏è Settings - customize experience

üìû **Contact Support:**
‚Ä¢ Report bugs or issues
‚Ä¢ Suggest new features
‚Ä¢ Get shopping advice
‚Ä¢ Technical assistance

üí° **Tips:**
‚Ä¢ Menu is always visible
‚Ä¢ All features accessible instantly
‚Ä¢ No complex navigation needed
‚Ä¢ Real-time updates

üéØ **Popular Questions:**
‚Ä¢ How to earn cashback? Use üí∞ Cashback
‚Ä¢ How to find deals? Use üîç Find Deals
‚Ä¢ How to see my stats? Use üéÆ My Profile

Need more help? Just ask! üòä`;

  await bot.sendMessage(chatId, helpMessage, {
    parse_mode: 'Markdown',
    reply_markup: fixedMainMenu
  });
}

async function handleProductSearch(chatId, query) {
  await bot.sendMessage(chatId, `üîç Searching for "${query}"...`, {
    reply_markup: fixedMainMenu
  });
  
  try {
    const products = await dataIntegration.searchProductsForBot(query, undefined, 2);
    
    if (products.length === 0) {
      await bot.sendMessage(chatId, `‚ùå No products found for "${query}". Try different keywords.`, {
        reply_markup: fixedMainMenu
      });
      return;
    }

    await bot.sendMessage(chatId, `üõçÔ∏è *Search Results for "${query}"* (${products.length} found)`, {
      parse_mode: 'Markdown',
      reply_markup: fixedMainMenu
    });

    for (const product of products) {
      const message = dataIntegration.formatProductMessage(product);
      
      await bot.sendMessage(chatId, message, {
        parse_mode: 'Markdown',
        disable_web_page_preview: false,
        reply_markup: fixedMainMenu
      });
      
      await new Promise(resolve => setTimeout(resolve, 500));
    }
  } catch (error) {
    console.error('Error searching products:', error);
    await bot.sendMessage(chatId, '‚ùå Error searching products. Please try again.', {
      reply_markup: fixedMainMenu
    });
  }
}

// Error handling
bot.on('polling_error', (error) => {
  console.error('Polling error:', error);
});

console.log('üöÄ bazaarGuru Clean Fixed Menu Bot is running!');
console.log('üì± Features: ONLY fixed menu - NO duplicates');
console.log('üéØ Menu Structure:');
console.log('Row 1: [ü§ñ AI Recommendations] [üî• Hot Deals] [üìñ Guide]');
console.log('Row 2: [üì± Electronics] [üëó Fashion] [üíÑ Beauty]');
console.log('Row 3: [üçî Food] [üè™ Stores] [‚öôÔ∏è Settings]');
console.log('Row 4: [üîç Find Deals] [üéÆ My Profile]');
console.log('Row 5: [üí∞ Cashback] [üÜò Help]');